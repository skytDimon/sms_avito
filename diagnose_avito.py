#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Diagnostic script for Avito API access
"""

import json
import requests

def check_avito_api_access():
    """Check what Avito API access is available"""
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è config.json: {e}")
        return

    avito_config = config.get('avito', {})
    api_key = avito_config.get('api_key')
    user_id = avito_config.get('user_id')
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Avito API –¥–æ—Å—Ç—É–ø–∞")
    print(f"üìã API Key: {api_key[:10]}..." if api_key else "‚ùå API Key –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    print(f"üë§ User ID: {user_id[:10]}..." if user_id else "‚ùå User ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    if not api_key or not user_id:
        print("\n‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    # Test 1: Try direct API key authentication (older method)
    print("\nüß™ –¢–µ—Å—Ç 1: –ü—Ä—è–º–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ API –∫–ª—é—á—É")
    try:
        headers = {
            'Authorization': f'Bearer {api_key}',
            'Content-Type': 'application/json'
        }
        
        # Try to get user info
        url = f'https://api.avito.ru/core/v1/accounts/{user_id}'
        response = requests.get(url, headers=headers)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ –ü—Ä—è–º–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            data = response.json()
            print(f"üìù –ê–∫–∫–∞—É–Ω—Ç: {data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # Test 2: Check available API methods
    print("\nüß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ API")
    try:
        # Try different endpoints to see what's available
        endpoints = [
            f'https://api.avito.ru/core/v1/accounts/{user_id}',
            f'https://api.avito.ru/core/v1/accounts/{user_id}/items',
            f'https://api.avito.ru/messenger/v1/accounts/{user_id}/chats'
        ]
        
        for endpoint in endpoints:
            try:
                response = requests.get(endpoint, headers=headers)
                endpoint_name = endpoint.split('/')[-1] or endpoint.split('/')[-2]
                
                if response.status_code == 200:
                    print(f"‚úÖ {endpoint_name}: –î–æ—Å—Ç—É–ø–µ–Ω")
                elif response.status_code == 403:
                    print(f"üîí {endpoint_name}: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ (403)")
                elif response.status_code == 401:
                    print(f"üö´ {endpoint_name}: –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω (401)")
                else:
                    print(f"‚ùì {endpoint_name}: {response.status_code}")
                    
            except Exception as e:
                print(f"‚ùå {endpoint_name}: –û—à–∏–±–∫–∞ - {e}")
                
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ Avito API –¥–ª—è –±–∏–∑–Ω–µ—Å–∞")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∫–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ")
    print("3. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ Messenger API –æ—Ç–¥–µ–ª—å–Ω–æ")
    print("4. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥–∞ –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É")

if __name__ == "__main__":
    check_avito_api_access()
